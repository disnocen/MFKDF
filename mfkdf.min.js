var r,e;r=self,e=function(){return r={930:r=>{r.exports.kdf={kdf:"argon2id",pbkdf2rounds:31e4,pbkdf2digest:"sha256",bcryptrounds:10,scryptcost:16384,scryptblocksize:8,scryptparallelism:1,argon2time:2,argon2mem:24576,argon2parallelism:1}},138:(r,e,s)=>{r.exports={setup:s(275)}},275:(r,e,s)=>{r.exports={...s(336)}},336:(r,e,s)=>{const t=s(930);r.exports.kdf=function(r){if("string"!=typeof(r=Object.assign(Object.assign({},t.kdf),r)).kdf)throw new TypeError("kdf must be a string");const e={type:r.kdf,params:{}};if("pbkdf2"===r.kdf){if(!Number.isInteger(r.pbkdf2rounds))throw new TypeError("pbkdf2rounds must be an integer");if(!(r.pbkdf2rounds>0))throw new RangeError("pbkdf2rounds must be positive");if(e.params.rounds=r.pbkdf2rounds,"string"!=typeof r.pbkdf2digest)throw new TypeError("pbkdf2digest must be a string");if(!["sha1","sha256","sha384","sha512"].includes(r.pbkdf2digest))throw new RangeError("pbkdf2digest must be one of sha1, sha256, sha384, or sha512");e.params.digest=r.pbkdf2digest}else if("bcrypt"===r.kdf){if(!Number.isInteger(r.bcryptrounds))throw new TypeError("bcryptrounds must be an integer");if(!(r.bcryptrounds>0))throw new RangeError("bcryptrounds must be positive");e.params.rounds=r.bcryptrounds}else if("scrypt"===r.kdf){if(!Number.isInteger(r.scryptcost))throw new TypeError("scryptcost must be a positive integer");if(!(r.scryptcost>0))throw new RangeError("scryptcost must be positive");if(e.params.rounds=r.scryptcost,!Number.isInteger(r.scryptblocksize))throw new TypeError("scryptblocksize must be an integer");if(!(r.scryptblocksize>0))throw new RangeError("scryptblocksize must be positive");if(e.params.blocksize=r.scryptblocksize,!Number.isInteger(r.scryptparallelism))throw new TypeError("scryptparallelism must be an integer");if(!(r.scryptparallelism>0))throw new RangeError("scryptparallelism must be positive");e.params.parallelism=r.scryptparallelism}else{if("argon2i"!==r.kdf&&"argon2d"!==r.kdf&&"argon2id"!==r.kdf)throw new RangeError("kdf must be one of pbkdf2, bcrypt, scrypt, argon2i, argon2d, or argon2id");if(!Number.isInteger(r.argon2time))throw new TypeError("argon2time must be an integer");if(!(r.argon2time>0))throw new RangeError("argon2time must be positive");if(e.params.rounds=r.argon2time,!Number.isInteger(r.argon2mem))throw new TypeError("argon2mem must be an integer");if(!(r.argon2mem>0))throw new RangeError("argon2mem must be positive");if(e.params.memory=r.argon2mem,!Number.isInteger(r.argon2parallelism))throw new TypeError("argon2parallelism must be an integer");if(!(r.argon2parallelism>0))throw new RangeError("argon2parallelism must be positive");e.params.parallelism=r.argon2parallelism}return e}}},e={},s=function s(t){var o=e[t];if(void 0!==o)return o.exports;var n=e[t]={exports:{}};return r[t](n,n.exports,s),n.exports}(138),s;var r,e,s},"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.mfkdf=e():r.mfkdf=e();